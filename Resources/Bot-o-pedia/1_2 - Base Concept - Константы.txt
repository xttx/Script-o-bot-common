<size=30><b>Константы</b></size>
----------------------------------------
Константы представляют неизменяемые значения (иногда их еще называют литералами). Константы/литералы можно передавать переменным в качестве значения, использовать в арифметических/логических выражениях и передавать методам/функциям в качестве аргументов. Константы бывают логическими, целочисленными, вещественными, символьными и строчными. И отдельный литерал представляет ключевое слово null.

<size=26>Логические константы - тип <t>bool</t></size>
Есть две логических константы - true (истина) и false (ложь)

<size=26>Целочисленные константы - тип <t>int</t></size>
Целочисленные константы представляют положительные и отрицательные целые числа, например, 1, 2, 3, 4, -7, -109, 0. 

<size=26>Вещественные константы - типы <t>float</t>, <t>double</t>, <t>decimal</t></size>
Вещественные константы представляют вещественные числа - дроби. Например это 3.14, 100.001, -0.38.
В качестве десятичного разделителя всегда используется точка.
Поскольку вещественных типов в C# несколько, для указания конкретного типа при использовании константы используются суффиксы: F (или f) для типа <t>float</t>, и M (или m) для типа <t>decimal</t>
3.14 - константа типа <t>double</t>
3.14f - константа типа <t>float</t>
3.14m - константа типа <t>decimal</t>

<size=26>Символьные константы - тип <t>char</t></size>
Символьные константы представляют одиночные символы. Символы заключаются в одинарные кавычки.
Символьные константы бывают нескольких видов. 

Прежде всего это обычные символы: 
<str>'A'</str>
<str>'F'</str>
<str>'N'</str>
<str>'7'</str>

Специальную группу представляют управляющие последовательности. Управляющая последовательность представляет символ, перед которым ставится обратный слеш. И данная последовательность интерпретируется определенным образом. Наиболее часто используемые последовательности:
<str>'\n'</str> - перевод строки
<str>'\t'</str> - табуляция
<str>'\\'</str> - обратный слеш
И если компилятор встретит в тексте последовательность \t, то он будет воспринимать эту последовательность не как слеш и букву t, а как табуляцию - то есть длинный отступ.

Еще один способ определения символов представляет использования шестнадцатеричных кодов ASCII. Для этого в одинарных кавычках указываются символы '\x', после которых идет шестнадцатеричный код символа из таблицы ASCII.
<str>'\x78'</str> - символ x
<str>'\x5A'</str> - символ Z

И последний способ определения символьных литералов представляет применение кодов из таблицы символов Unicode. Для этого в одинарных кавычках указываются символы '\u', после которых идет шестнадцатеричный код Unicode.
<str>'\u0411'</str> - Б
<str>'\u00С9'</str> - É
<str>'\u623B'</str> - 戻

<size=26>Строковые константы - тип <t>string</t></size>
Строковые константы представляют строки, т.е. текст. Строки заключаются в двойные кавычки:
<str>"hello"</str>
<str>"фыва"</str>
<str>"hello word"</str>

Если внутри строки необходимо вывести двойную кавычку, то такая внутренняя кавычка предваряется обратным слешем:
<str>"Компания \"Рога и копыта\""</str>

Также в строках можно использовать управляющие последовательности. Например, последовательность '\n' осуществляет перевод на новую строку:
"Привет \nмир"
